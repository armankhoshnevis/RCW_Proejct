1. Define Model Parameters as Symbols:
    - Declare symbolic variables for characteristic moduli (Ec1, Ec2), time scales (tc1, tc2),
      power-law exponents (a1, a2), and frequency (w).

2. Compute Storage and Loss Moduli for Each Branch:
    - Formulate symbolic expressions for the storage and loss moduli for the first and second branches (Ep1, Ep2, Epp1, Epp2).
    - Calculate the combined storage and loss moduli (Ep and Epp) as the sum of both branches' contributions.

3. Convert Symbolic Expressions to MATLAB Functions:
    - Create MATLAB functions for Ep and Epp for numerical evaluation.
    - Derive the partial derivatives of Ep and Epp with respect to each model parameter and convert them to MATLAB functions for sensitivity analysis.

4. Load Experimental Data and Initialize Parameters:
    - Load experimental data and parameter values from an external file.
    - Define the mean and standard deviation of each model parameter, based on the assumption that the standard deviation is a fixed percentage of the mean.
    - Calculate parameter bounds for each variable to generate samples in the Monte Carlo simulation.

5. Monte Carlo Simulation (N_MC realizations):
    - For each realization:
        a. Sample random values for each model parameter within its bounds.
        b. Compute storage and loss moduli (Ep_vctr and Epp_vctr) for the sampled parameters.
        c. Calculate normalized sensitivity coefficients for each parameter concerning Ep, Epp, and their combined modulus using the parameter samples and frequency range.
        
        - Display the current iteration index for progress monitoring.

6. Compute Mean and Standard Deviation of Sensitivity Coefficients:
    - Calculate the mean and standard deviation across all realizations and frequencies for each sensitivity coefficient.
    - Store these computed values in arrays for further analysis.

7. Save Results:
    - Save the mean and standard deviation results for the sensitivity coefficients across frequencies to a .mat file for later use.
